# Makefile.in -- Makefile for libmaa
# Created: Sun Nov 19 13:32:41 1995 by faith@dict.org
# Copyright 1995-1998, 2002 Rickard E. Faith (faith@dict.org)
# Copyright 2002-2008 Aleksey Cheusov (vle@gmx.net)

# This program is free software; you can redistribute it and/or modify it
# under the terms of the GNU General Public License as published by the
# Free Software Foundation; either version 1, or (at your option) any
# later version.
#
# This program is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# General Public License for more details.
#
# You should have received a copy of the GNU General Public License along
# with this program; if not, write to the Free Software Foundation, Inc.,
# 675 Mass Ave, Cambridge, MA 02139, USA.
# 
# $Id: Makefile.in,v 1.66 2008/12/07 13:42:06 cheusov Exp $
#

ifneq (,)
This makefile requires GNU Make.
endif

MAA_MAJOR=@MAA_MAJOR@
MAA_MINOR=@MAA_MINOR@
MAA_TEENY=@MAA_TEENY@

VERSION=$(MAA_MAJOR).$(MAA_MINOR).$(MAA_TEENY)

.SUFFIXES:
.SUFFIXES: .c .o

srcdir=		@srcdir@
VPATH=		@srcdir@
prefix=		@prefix@
exec_prefix=	@exec_prefix@
libdir=         @libdir@
includedir=     @includedir@
subdirs=        doc

SHELL=		/bin/sh

CC=		@CC@
CPP=		@CPP@
LIBTOOL=	@LIBTOOL@
INSTALL=        @INSTALL@
INSTALL_PROGRAM=@INSTALL_PROGRAM@
INSTALL_DATA=	@INSTALL_DATA@
AWK=            @AWK@

VERCFLAGS=       -DMAA_MAJOR=$(MAA_MAJOR) -DMAA_MINOR=$(MAA_MINOR) -DMAA_TEENY=$(MAA_TEENY)
CFLAGS=		@DEFS@ @CPPFLAGS@ @CFLAGS@ $(VERCFLAGS) -I. -I${srcdir}
LDFLAGS=        @LDFLAGS@ @LIBS@ .libs/libmaa.a -lm

HEADERS= config.h maa.h maaP.h obstack.h
LIBOBJS= @LIBOBJS@ obstack.o \
	 hash.o set.o stack.o list.o error.o memory.o string.o \
	 debug.o flags.o maa.o prime.o bit.o timer.o \
	 arg.o pr.o sl.o base64.o base26.o source.o parse-concrete.o \
	 text.o log.o
TESTS=	 settest hashtest stringtest debugtest \
	 primetest listtest bittest argtest sltest prtest basetest
EXES=    memtest prtest

MAALIB=  libmaa.a

lib: $(MAALIB)

all: $(MAALIB) $(EXES) $(TESTS)
	echo making $@ in doc; \
	(cd doc && $(MAKE) $@) || exit 1;

install: $(MAALIB)
	mkdir -p $(DESTDIR)$(libdir) && \
	   $(LIBTOOL) --mode=install $(INSTALL) -c libmaa.la $(DESTDIR)$(libdir)
	mkdir -p $(DESTDIR)$(includedir) && \
	   $(INSTALL_DATA) -m 644 ${srcdir}/maa.h $(DESTDIR)$(includedir)

uninstall:
	rm -f $(DESTDIR)$(includedir)/maa.h
	$(LIBTOOL) --mode=uninstall rm -f $(DESTDIR)$(libdir)/libmaa.la

.PHONY: test
test: $(TESTS)
	@ex=0; \
	if test "${srcdir}" != .; then cp ${srcdir}/argtest.in .; fi; \
	for i in $(TESTS); do \
		./$$i | fgrep -v ' at ' > ./$$i.out.new; \
		if cmp @srcdir@/$$i.out $$i.out.new; \
		then \
			echo PASSED $$i; rm -f $$i.out.new; \
		else \
			echo FAILED $$i; ex=1; \
		fi; \
	done; \
	exit $$ex

.PHONY: test-update
test-update: $(TESTS)
	@for i in $(TESTS); do \
		echo Writing $$i.out; \
		./$$i | fgrep -v ' at ' > $$i.out; \
	done

arg.o: arggram.c
arggram.c: arggram.txt
	@AWK@ -f ./arggram2c < $< > $@

%.o: %.c
	$(LIBTOOL) --tag=CC --mode=compile $(CC) -o $@ -c $(CFLAGS) $<

%: %.o
	$(LIBTOOL) --tag=CC --mode=link $(CC) -o $@ $< $(LDFLAGS)

%test: %test.c rnd.o
	$(CC) $(CFLAGS) -o $@ $< rnd.o $(LDFLAGS)

dmalloc/dmalloc.h:
	echo making all in dmalloc
	(cd dmalloc && $(MAKE) all) || exit 1

libmaa.a: $(LIBOBJS)
	$(LIBTOOL) --tag=CC --mode=link ${CC} -o libmaa.la ${LIBOBJS:.o=.lo} \
	   -rpath "${libdir}" \
	   -version-info "$(MAA_MAJOR):$(MAA_MINOR)" 

$(LIBOBJS): $(HEADERS) # version.stamp # don't automatically bump version
$(EXES):    $(HEADERS) $(MAALIB)
$(TESTS):   $(HEADERS) $(MAALIB) rnd.o

date := $(shell date)

.PHONY: ChangeLog
ChangeLog:
	(echo "***** Making new ChangeLog..."; \
	rm -f ChangeLog; \
	AWK=@AWK@ rcs2log -i 2 > ChangeLog)

cvsdist: ChangeLog
	@( CVSROOT=`cat CVS/Root` && \
	export CVSROOT && \
	VERSION=$(VERSION) && \
	VERSION_CVS=`echo $${VERSION} | tr . -` && \
	export VERSION VERSION_CVS && \
	$(MAKE) ChangeLog && \
	cp ChangeLog /tmp/libmaa.ChangeLog.$${VERSION} && \
	echo "***** Exporting files for libmaa-$${VERSION}..." && \
	cd /tmp && \
	rm -rf /tmp/libmaa-$${VERSION} && \
	cvs export -fd libmaa-$${VERSION} \
	   -r libmaa-$${VERSION_CVS} dictd1/libmaa && \
	cd libmaa-$${VERSION} && \
	mv /tmp/libmaa.ChangeLog.$${VERSION} ChangeLog && \
	$(MAKE) -f Makefile.conf && \
	rm -rf autom4te.cache libmaa/autom4te.cache && \
	chmod -R a+rX,g-w . && \
	cd .. && \
	echo "***** Taring and zipping libmaa-$${VERSION}.tar.gz..." && \
	tar cvvf libmaa-$${VERSION}.tar libmaa-$${VERSION} && \
	gzip -9f libmaa-$${VERSION}.tar && \
	echo "***** Done making /tmp/libmaa-$${VERSION}.tar.gz")

.PHONY: clean cleandist tags
clean:
	@for subdir in `echo $(subdirs)`; do \
		echo making $@ in $$subdir; \
		(cd $$subdir && $(MAKE) $@) || exit 1; \
	done
	-rm -rf .libs
	-rm -f *~ *.la *.lo *.o core a.out config.log $(TESTS) $(EXES)
	-rm -f $(MAALIB) arggram.c
	-rm -f *.log *.aux *.toc *.dvi *.ps *.out.new
	-rm -f *.cfg *.dtk .inslog tca.map .pure
	-rm -f mkrnd

distclean: clean
	@for subdir in `echo $(subdirs)`; do \
		echo making $@ in $$subdir; \
		(cd $$subdir && $(MAKE) $@) || exit 1; \
	done
	-rm -f config.h config.h.in
	-rm -f config.cache config.status stamp-h.in stamp-h
	-rm -f Makefile arggram2c
	-rm -rf autom4te.cache

cvsclean: distclean
	rm -rf configure config.h.in

tags:
	etags: *.c

# The following is based on the "Automatic Remaking" node in the GNU
# Autoconf documentation:

$(srcdir)/configure: configure.in
	cd $(srcdir) && autoconf

# autoheader might not change config.h.in, so touch a stamp file.
${srcdir}/config.h.in: stamp-h.in
${srcdir}/stamp-h.in: configure.in
	cd ${srcdir} && autoheader
	touch ${srcdir}/stamp-h.in

config.h: stamp-h
stamp-h: config.h.in config.status
	./config.status

Makefile: Makefile.in config.status
	./config.status

config.status: configure
	./config.status --recheck

